Slide 10
1. JS timers are notorious, and single threaded will not run if your callback takes long time to execute, will not run smoothly.
2. If you use very small intervals, you are pinging the browser to reflow, repaint every few milliseconds irrespective of whether your page is in the active tab or not.
3. Reflows/repaints are expensive and doing it again and again in very short intervals can easily kill weaker browsers.



Slide 11
1. Browsers know better, and can control animations
2. Remove a layer of abstraction and deal directly with the browser
3. Accurate, no more dependency on callbacks, browser in control of animation from start to end.
4. With setTimeouts and setIntervals, browsers can't tell if an animation is occurring or just a callback, with CSS animations they are in control.
5. Outsource rendering to GPU, and accelerate composting without triggering reflow, only layers that require GPU accelerated changes will change, e.g. transforms, canvas painting. 
6. Add or remove classnames instead of updating styles for each element on the fly.


Slide 12
1. 2 ways to animate elements in CSS3

Slide 13

Slide 14 (slide-tween)
1. Control the rate of change of values
2. Cannot reach beyond half way values of initial and final with cubic bezier curves
3. Cannot do sinusoidal curves, or bounces. 
4. In between values cannot be maximum


Slide 17
1. Transition End has two parameters propertyName and elapsedTime

Slide 18
display, position, background-image



Slide 32
1. setInterval and setTimeouts are queued at the time, not executed. 
2. Execution time depends on the job in the queue before them
3. Always running even in inactive tabs
4. Browsers know best what the right frame rate will be. Throttle requests if faster than that anyway.
5. CSSAnimations and Script animations might not be in sync. 
6. Great way to fire custom events based on CSS animations e.g. transitionStart, CSSAnimationKeyframe







TECHNIQUES

1. Animation using translate: http://jsfiddle.net/nimbu/H5QdW/

2. Animation using font-size: http://jsfiddle.net/nimbu/BLfhR/32/

3. Animation using font-size but using requestAnimFrame to render http://jsfiddle.net/nimbu/ys2xG/13/

4. Animation triggered with transitions and transistionEnd http://jsfiddle.net/nimbu/aHtnF/3/

GRAPHS

1. Chrome, HW Accel but with font-size anims: http://gyazo.com/0357a785a2c3d70919e99ac539d0733b.png

2. Aurora with font-size anims: http://gyazo.com/af2194fc3f7c026cb413bb0f4b1244cf.png

3. Firefox, using requestAnimFrame http://gyazo.com/253a0fa5fa9285ddf32faa33b4a018b5.png

4. Chrome, using requstAnimFrame http://gyazo.com/7984cac2db12a65c53a074da87cf3dd4.png

5. Opera, using setTimeout http://gyazo.com/6a5b24df28586f7d18d064313e8a1dbb.png

6. Aurora, using transform-scale: http://gyazo.com/81d1844bdbecbc94d83536a65f520877.png

7. Chrome, HW accel using transform-scale: http://gyazo.com/3dbde658c1793742d2b15d00c1881847.png

8. Opera, transtion: http://gyazo.com/e19482d03007e536be0dd049c6c83e7e.png

9. Chrome, transition: http://gyazo.com/e47c536e70ad5ed96f81ad9607a0d6b8.png (has bug)

10. Firefox transition does not fire at all. 